// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: innerproto/db.proto

package inner

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DB操作码
type DBOperationType int32

const (
	DBOperationType_None         DBOperationType = 0
	DBOperationType_Find         DBOperationType = 1
	DBOperationType_FindMany     DBOperationType = 2
	DBOperationType_Update       DBOperationType = 4
	DBOperationType_UpdateMany   DBOperationType = 8
	DBOperationType_Delete       DBOperationType = 16
	DBOperationType_DeleteMany   DBOperationType = 32
	DBOperationType_Redis_SetKey DBOperationType = 64
	DBOperationType_Redis_GetKey DBOperationType = 128
	DBOperationType_Redis_DelKey DBOperationType = 256
)

// Enum value maps for DBOperationType.
var (
	DBOperationType_name = map[int32]string{
		0:   "None",
		1:   "Find",
		2:   "FindMany",
		4:   "Update",
		8:   "UpdateMany",
		16:  "Delete",
		32:  "DeleteMany",
		64:  "Redis_SetKey",
		128: "Redis_GetKey",
		256: "Redis_DelKey",
	}
	DBOperationType_value = map[string]int32{
		"None":         0,
		"Find":         1,
		"FindMany":     2,
		"Update":       4,
		"UpdateMany":   8,
		"Delete":       16,
		"DeleteMany":   32,
		"Redis_SetKey": 64,
		"Redis_GetKey": 128,
		"Redis_DelKey": 256,
	}
)

func (x DBOperationType) Enum() *DBOperationType {
	p := new(DBOperationType)
	*p = x
	return p
}

func (x DBOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_innerproto_db_proto_enumTypes[0].Descriptor()
}

func (DBOperationType) Type() protoreflect.EnumType {
	return &file_innerproto_db_proto_enumTypes[0]
}

func (x DBOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DBOperationType.Descriptor instead.
func (DBOperationType) EnumDescriptor() ([]byte, []int) {
	return file_innerproto_db_proto_rawDescGZIP(), []int{0}
}

type DBCtrlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OPType        DBOperationType        `protobuf:"varint,1,opt,name=OPType,proto3,enum=inner.DBOperationType" json:"OPType,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	CollectName   string                 `protobuf:"bytes,3,opt,name=collectName,proto3" json:"collectName,omitempty"`
	Condition     []byte                 `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	Data          [][]byte               `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBCtrlRequest) Reset() {
	*x = DBCtrlRequest{}
	mi := &file_innerproto_db_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBCtrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCtrlRequest) ProtoMessage() {}

func (x *DBCtrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_innerproto_db_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCtrlRequest.ProtoReflect.Descriptor instead.
func (*DBCtrlRequest) Descriptor() ([]byte, []int) {
	return file_innerproto_db_proto_rawDescGZIP(), []int{0}
}

func (x *DBCtrlRequest) GetOPType() DBOperationType {
	if x != nil {
		return x.OPType
	}
	return DBOperationType_None
}

func (x *DBCtrlRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DBCtrlRequest) GetCollectName() string {
	if x != nil {
		return x.CollectName
	}
	return ""
}

func (x *DBCtrlRequest) GetCondition() []byte {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *DBCtrlRequest) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DBCtrlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OPType        DBOperationType        `protobuf:"varint,1,opt,name=OPType,proto3,enum=inner.DBOperationType" json:"OPType,omitempty"`
	Result        [][]byte               `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	MatchedCount  int64                  `protobuf:"varint,3,opt,name=MatchedCount,proto3" json:"MatchedCount,omitempty"`
	ModifiedCount int64                  `protobuf:"varint,4,opt,name=ModifiedCount,proto3" json:"ModifiedCount,omitempty"`
	UpsertedCount int64                  `protobuf:"varint,5,opt,name=UpsertedCount,proto3" json:"UpsertedCount,omitempty"`
	DeletedCount  int64                  `protobuf:"varint,6,opt,name=DeletedCount,proto3" json:"DeletedCount,omitempty"`
	DocumentCount int64                  `protobuf:"varint,7,opt,name=DocumentCount,proto3" json:"DocumentCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBCtrlResponse) Reset() {
	*x = DBCtrlResponse{}
	mi := &file_innerproto_db_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBCtrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCtrlResponse) ProtoMessage() {}

func (x *DBCtrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_innerproto_db_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCtrlResponse.ProtoReflect.Descriptor instead.
func (*DBCtrlResponse) Descriptor() ([]byte, []int) {
	return file_innerproto_db_proto_rawDescGZIP(), []int{1}
}

func (x *DBCtrlResponse) GetOPType() DBOperationType {
	if x != nil {
		return x.OPType
	}
	return DBOperationType_None
}

func (x *DBCtrlResponse) GetResult() [][]byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *DBCtrlResponse) GetMatchedCount() int64 {
	if x != nil {
		return x.MatchedCount
	}
	return 0
}

func (x *DBCtrlResponse) GetModifiedCount() int64 {
	if x != nil {
		return x.ModifiedCount
	}
	return 0
}

func (x *DBCtrlResponse) GetUpsertedCount() int64 {
	if x != nil {
		return x.UpsertedCount
	}
	return 0
}

func (x *DBCtrlResponse) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DBCtrlResponse) GetDocumentCount() int64 {
	if x != nil {
		return x.DocumentCount
	}
	return 0
}

type DBRedisCtrlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OPType        DBOperationType        `protobuf:"varint,1,opt,name=OPType,proto3,enum=inner.DBOperationType" json:"OPType,omitempty"`
	ModKey        uint64                 `protobuf:"varint,2,opt,name=modKey,proto3" json:"modKey,omitempty"`
	RedisKey      []string               `protobuf:"bytes,3,rep,name=redisKey,proto3" json:"redisKey,omitempty"`
	Data          [][]byte               `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBRedisCtrlRequest) Reset() {
	*x = DBRedisCtrlRequest{}
	mi := &file_innerproto_db_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBRedisCtrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRedisCtrlRequest) ProtoMessage() {}

func (x *DBRedisCtrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_innerproto_db_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRedisCtrlRequest.ProtoReflect.Descriptor instead.
func (*DBRedisCtrlRequest) Descriptor() ([]byte, []int) {
	return file_innerproto_db_proto_rawDescGZIP(), []int{2}
}

func (x *DBRedisCtrlRequest) GetOPType() DBOperationType {
	if x != nil {
		return x.OPType
	}
	return DBOperationType_None
}

func (x *DBRedisCtrlRequest) GetModKey() uint64 {
	if x != nil {
		return x.ModKey
	}
	return 0
}

func (x *DBRedisCtrlRequest) GetRedisKey() []string {
	if x != nil {
		return x.RedisKey
	}
	return nil
}

func (x *DBRedisCtrlRequest) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DBRedisCtrlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ret           int32                  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	RedisKey      []string               `protobuf:"bytes,2,rep,name=redisKey,proto3" json:"redisKey,omitempty"`
	Data          [][]byte               `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBRedisCtrlResponse) Reset() {
	*x = DBRedisCtrlResponse{}
	mi := &file_innerproto_db_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBRedisCtrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRedisCtrlResponse) ProtoMessage() {}

func (x *DBRedisCtrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_innerproto_db_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRedisCtrlResponse.ProtoReflect.Descriptor instead.
func (*DBRedisCtrlResponse) Descriptor() ([]byte, []int) {
	return file_innerproto_db_proto_rawDescGZIP(), []int{3}
}

func (x *DBRedisCtrlResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *DBRedisCtrlResponse) GetRedisKey() []string {
	if x != nil {
		return x.RedisKey
	}
	return nil
}

func (x *DBRedisCtrlResponse) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_innerproto_db_proto protoreflect.FileDescriptor

var file_innerproto_db_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0xa5, 0x01, 0x0a,
	0x0d, 0x44, 0x42, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x06, 0x4f, 0x50, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x44, 0x42, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x4f, 0x50, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x92, 0x02, 0x0a, 0x0e, 0x44, 0x42, 0x43, 0x74, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x4f, 0x50, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x44, 0x42, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x4f, 0x50, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x44, 0x42,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x06, 0x4f, 0x50, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x44, 0x42, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x4f, 0x50, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x57, 0x0a, 0x13, 0x44, 0x42, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x2a, 0xa3, 0x01, 0x0a, 0x0f, 0x44, 0x42, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x69, 0x6e,
	0x64, 0x4d, 0x61, 0x6e, 0x79, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x79, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x10, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x10, 0x20, 0x12,
	0x10, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x10,
	0x40, 0x12, 0x11, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x10, 0x80, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x44, 0x65,
	0x6c, 0x4b, 0x65, 0x79, 0x10, 0x80, 0x02, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_innerproto_db_proto_rawDescOnce sync.Once
	file_innerproto_db_proto_rawDescData []byte
)

func file_innerproto_db_proto_rawDescGZIP() []byte {
	file_innerproto_db_proto_rawDescOnce.Do(func() {
		file_innerproto_db_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_innerproto_db_proto_rawDesc), len(file_innerproto_db_proto_rawDesc)))
	})
	return file_innerproto_db_proto_rawDescData
}

var file_innerproto_db_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_innerproto_db_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_innerproto_db_proto_goTypes = []any{
	(DBOperationType)(0),        // 0: inner.DBOperationType
	(*DBCtrlRequest)(nil),       // 1: inner.DBCtrlRequest
	(*DBCtrlResponse)(nil),      // 2: inner.DBCtrlResponse
	(*DBRedisCtrlRequest)(nil),  // 3: inner.DBRedisCtrlRequest
	(*DBRedisCtrlResponse)(nil), // 4: inner.DBRedisCtrlResponse
}
var file_innerproto_db_proto_depIdxs = []int32{
	0, // 0: inner.DBCtrlRequest.OPType:type_name -> inner.DBOperationType
	0, // 1: inner.DBCtrlResponse.OPType:type_name -> inner.DBOperationType
	0, // 2: inner.DBRedisCtrlRequest.OPType:type_name -> inner.DBOperationType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_innerproto_db_proto_init() }
func file_innerproto_db_proto_init() {
	if File_innerproto_db_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_innerproto_db_proto_rawDesc), len(file_innerproto_db_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_innerproto_db_proto_goTypes,
		DependencyIndexes: file_innerproto_db_proto_depIdxs,
		EnumInfos:         file_innerproto_db_proto_enumTypes,
		MessageInfos:      file_innerproto_db_proto_msgTypes,
	}.Build()
	File_innerproto_db_proto = out.File
	file_innerproto_db_proto_goTypes = nil
	file_innerproto_db_proto_depIdxs = nil
}
